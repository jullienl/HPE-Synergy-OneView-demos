{
	"info": {
		"_postman_id": "019f9e85-6afa-4fc7-aa5d-9c13a07398a7",
		"name": "Redfish with iLO",
		"description": "Redfish in Houston B172",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Gen9",
			"item": [
				{
					"name": "Create session using OneView iLOSSO",
					"item": [
						{
							"name": "Certificates",
							"item": []
						},
						{
							"name": "1- Create OneView Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"sessionID\", jsonData.sessionID);",
											"",
											" tests[\"sessionID = \" + jsonData.sessionID] = true;  ",
											" ",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-Version",
										"value": "800"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n\"authLoginDomain\":\"Local\",\r\n\"password\":\"{{password}}\",\r\n\"userName\":\"administrator\"\r\n}"
								},
								"url": {
									"raw": "https://composer.lj.lab/rest/login-sessions",
									"protocol": "https",
									"host": [
										"composer",
										"lj",
										"lab"
									],
									"path": [
										"rest",
										"login-sessions"
									]
								},
								"description": "Login Session"
							},
							"response": []
						},
						{
							"name": "2- Get Server hardware UUID/iLO URI for \"F1-B2\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//var loop_count = 0;",
											"",
											"for (count = 0; count < jsonData.members.length; count++)",
											"{",
											"    if (jsonData.members[count].name == \"Frame1, bay 2\")",
											"    {",
											"        pm.environment.set(\"server_hardware_uuid\", jsonData.members[count].uuid);",
											"",
											"        for (i = 0; i < jsonData.members[count].mpHostInfo.mpIpAddresses.length; i++) {",
											"            if (jsonData.members[count].mpHostInfo.mpIpAddresses[i].type !== \"LinkLocal\") ",
											"            {",
											"                    pm.environment.set(\"iloURI\", \"https://\" + jsonData.members[count].mpHostInfo.mpIpAddresses[i].address);",
											"                 ",
											"            }",
											"        }",
											"        ",
											"        tests[\"server_hardware_uuid = \" + jsonData.members[count].uuid] = true;  ",
											"        tests[\"iloURI = \" + postman.getEnvironmentVariable(\"iloURI\")] = true;  ",
											"    }",
											"}",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "https://composer.lj.lab/rest/server-hardware",
									"protocol": "https",
									"host": [
										"composer",
										"lj",
										"lab"
									],
									"path": [
										"rest",
										"server-hardware"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "3- Get iLO SSO URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var ilossourl =  jsonData.iloSsoUrl;",
											"",
											"postman.setEnvironmentVariable(\"ilossourl\", ilossourl);",
											"",
											"tests[\"ilossourl = \" + ilossourl] = true; ",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "https://composer.lj.lab/rest/server-hardware/{{server_hardware_uuid}}/iloSsoUrl",
									"protocol": "https",
									"host": [
										"composer",
										"lj",
										"lab"
									],
									"path": [
										"rest",
										"server-hardware",
										"{{server_hardware_uuid}}",
										"iloSsoUrl"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "4- Get iLO SSO Auth key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var auth =  postman.getResponseCookie(\"sessionkey\").value;",
											"",
											"postman.setEnvironmentVariable(\"X-Auth-Token\", auth);",
											"",
											"tests[\"X-Auth-Token = \" + auth] = true; ",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "{{ilossourl}}",
									"host": [
										"{{ilossourl}}"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "5-Get RedFish Sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Get Systems/1/",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										""
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						}
					]
				},
				{
					"name": "Certificates",
					"item": [
						{
							"name": "POST Generate CSR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"City\":  \"Houston\",\r\n    \"CommonName\":  \"ilo-ABCD.lj.lab\",\r\n    \"OrgName\":  \"HPE\",\r\n    \"State\":  \"Texas\",\r\n    \"OrgUnit\":  \"Synergy\",\r\n    \"Country\":  \"US\",\r\n    \"Action\" : \"GenerateCSR\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService/HttpsCert/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService",
										"HttpsCert",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Get CSR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService/HttpsCert/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService",
										"HttpsCert",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Sessions",
					"item": [
						{
							"name": "Delete Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{SessionLocation}}",
									"host": [
										"{{SessionLocation}}"
									]
								},
								"description": "DELETE Session"
							},
							"response": []
						},
						{
							"name": "Get Sessions w/ BasicAuthentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{iloPasswd}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{iloUser}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Sessions using Basic Authentication"
							},
							"response": []
						}
					]
				},
				{
					"name": "IP Address",
					"item": [
						{
							"name": "GET iLO NIC IP Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"//Get IP Address\r",
											"var IPv4Address =  jsonData.IPv4Addresses[0].Address;\r",
											"\r",
											"//Display in test results\r",
											"tests[\"iLO IPv4 address = \" + IPv4Address ] = true; \r",
											"\r",
											"//Get IP Address Origin\r",
											"var IPv4AddressOrigin =  jsonData.IPv4Addresses[0].AddressOrigin;\r",
											"\r",
											"//Display in test results\r",
											"tests[\"iLO IPv4 address mode = \" + IPv4AddressOrigin ] = true; "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"IPv4Addresses\": [\n        {\n            \"AddressOrigin\": \"DHCP\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								},
								"description": "Trying to patch iLO NIC to DHCP. To come back:\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
							},
							"response": []
						},
						{
							"name": "PATCH iLO NIC to DHCP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"IPv4Addresses\": [\n        {\n            \"AddressOrigin\": \"DHCP\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								},
								"description": "Trying to patch iLO NIC to DHCP. \nTo come back:\n\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
							},
							"response": []
						},
						{
							"name": "PATCH iLO NIC to IP Static",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " { \n     \"IPv4Addresses\": \n    [ \n        { \n        \"Address\": \"192.168.0.8\", \n        \"AddressOrigin\": \"Static\", \n        \"Gateway\": \"192.168.1.1\", \n        \"SubnetMask\": \"255.255.252.0\" \n        } \n    ] \n}\n\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Session with iLO Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"Token\", postman.getResponseHeader(\"X-Auth-Token\"));",
									"pm.environment.set(\"SessionLocation\", postman.getResponseHeader(\"Location\"));",
									"",
									"// To see the console, go to View / Show Postman Console",
									"console.log(\"Token:\", pm.variables.get(\"Token\")); ",
									"console.log(\"SessionLocation:\", pm.variables.get(\"SessionLocation\")); ",
									"",
									"//Display in session creation results",
									"tests[\"iLO session token = \" + pm.environment.get(\"Token\") ] = true; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"UserName\": \"{{iloUser}}\",\n\"Password\": \"{{iloPasswd}}\"}\n"
						},
						"url": {
							"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"SessionService",
								"Sessions",
								""
							]
						},
						"description": "Get Session Token"
					},
					"response": []
				},
				{
					"name": "Get Systems/1/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Systems/1/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Systems",
								"1",
								""
							]
						},
						"description": "Get the list of all the Redfish services, at root level"
					},
					"response": []
				},
				{
					"name": "Patch SecureBoot",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"SecureBootEnable\": false}\n"
						},
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Systems/1/SecureBoot/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Systems",
								"1",
								"SecureBoot",
								""
							]
						},
						"description": "Patch HostName in ComputerSystem"
					},
					"response": []
				},
				{
					"name": "POST iLO Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Action\": \"reset\"}"
						},
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Managers/1/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Managers",
								"1",
								""
							]
						},
						"description": "Trying to patch iLO NIC to DHCP. To come back:\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
					},
					"response": []
				},
				{
					"name": "GET PCI adapter info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/systems/1/portmap/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"systems",
								"1",
								"portmap",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gen10",
			"item": [
				{
					"name": "Create session using OneView iLOSSO",
					"item": [
						{
							"name": "1- Login-sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"sessionID\", jsonData.sessionID);",
											"",
											" tests[\"sessionID = \" + jsonData.sessionID] = true;  ",
											" ",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-API-Version",
										"value": "800"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n\"authLoginDomain\":\"Local\",\r\n\"password\":\"{{composerpassword}}\",\r\n\"userName\":\"administrator\"\r\n}"
								},
								"url": {
									"raw": "{{oneview}}/rest/login-sessions",
									"host": [
										"{{oneview}}"
									],
									"path": [
										"rest",
										"login-sessions"
									]
								},
								"description": "Login Session"
							},
							"response": []
						},
						{
							"name": "2- Get Server hardware UUID/iLO URI for \"F1-B5\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//var loop_count = 0;",
											"",
											"for (count = 0; count < jsonData.members.length; count++)",
											"{",
											"    if (jsonData.members[count].name == \"Frame1, bay 5\")",
											"    {",
											"        pm.environment.set(\"server_hardware_uuid\", jsonData.members[count].uuid);",
											"",
											"        for (i = 0; i < jsonData.members[count].mpHostInfo.mpIpAddresses.length; i++) {",
											"            if (jsonData.members[count].mpHostInfo.mpIpAddresses[i].type !== \"LinkLocal\") ",
											"            {",
											"                    pm.environment.set(\"iloURI\", \"https://\" + jsonData.members[count].mpHostInfo.mpIpAddresses[i].address);",
											"                 ",
											"            }",
											"        }",
											"        ",
											"        tests[\"server_hardware_uuid = \" + jsonData.members[count].uuid] = true;  ",
											"        tests[\"iloURI = \" + postman.getEnvironmentVariable(\"iloURI\")] = true;  ",
											"    }",
											"}",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "{{oneview}}/rest/server-hardware",
									"host": [
										"{{oneview}}"
									],
									"path": [
										"rest",
										"server-hardware"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "2b- Get Server hardware UUID/iLO URI for \"LIOGW-ilo.etc.fr.comm.hpecorp.net\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//var loop_count = 0;",
											"",
											"for (count = 0; count < jsonData.members.length; count++)",
											"{",
											"    if (jsonData.members[count].name == \"LIOGW-ilo.etc.fr.comm.hpecorp.net\")",
											"    {",
											"        pm.environment.set(\"server_hardware_uuid\", jsonData.members[count].uuid);",
											"",
											"        for (i = 0; i < jsonData.members[count].mpHostInfo.mpIpAddresses.length; i++) {",
											"            if (jsonData.members[count].mpHostInfo.mpIpAddresses[i].type == \"Static\") ",
											"            {",
											"                    pm.environment.set(\"iloURI\", \"https://\" + jsonData.members[count].mpHostInfo.mpIpAddresses[i].address);",
											"                 ",
											"            }",
											"        }",
											"        ",
											"        tests[\"server_hardware_uuid = \" + jsonData.members[count].uuid] = true;  ",
											"        tests[\"iloURI = \" + postman.getEnvironmentVariable(\"iloURI\")] = true;  ",
											"    }",
											"}",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "{{oneview}}/rest/server-hardware",
									"host": [
										"{{oneview}}"
									],
									"path": [
										"rest",
										"server-hardware"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "3- Get iLO SSO URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var ilossourl =  jsonData.iloSsoUrl;",
											"",
											"postman.setEnvironmentVariable(\"ilossourl\", ilossourl);",
											"",
											"tests[\"ilossourl = \" + ilossourl] = true; ",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "{{oneview}}/rest/server-hardware/{{server_hardware_uuid}}/iloSsoUrl",
									"host": [
										"{{oneview}}"
									],
									"path": [
										"rest",
										"server-hardware",
										"{{server_hardware_uuid}}",
										"iloSsoUrl"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "4- Get iLO SSO Auth key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var auth =  postman.getResponseCookie(\"sessionkey\").value;",
											"",
											"postman.setEnvironmentVariable(\"X-Auth-Token\", auth);",
											"",
											"tests[\"X-Auth-Token = \" + auth] = true; ",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-API-Version",
										"value": "600"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Auth",
										"value": "{{sessionID}}"
									}
								],
								"url": {
									"raw": "{{ilossourl}}",
									"host": [
										"{{ilossourl}}"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "5-Get RedFish Sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "6- Get Logical drives Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/systems/1/smartstorageconfig/settings/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"systems",
										"1",
										"smartstorageconfig",
										"settings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "7- Get Logical drives",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/systems/1/smartstorageconfig/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"systems",
										"1",
										"smartstorageconfig",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "8- Get ServiceRoot",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										""
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "9- Get Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{X-Auth-Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/accountservice/accounts/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"accountservice",
										"accounts",
										""
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						}
					]
				},
				{
					"name": "AD",
					"item": [
						{
							"name": "Get Account service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										""
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						}
					]
				},
				{
					"name": "Adapters",
					"item": [
						{
							"name": "Get System /v1/system/1 - Go to OEM/HPE/LINKS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "GET EthernetInterfaces/",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/EthernetInterfaces/?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"EthernetInterfaces",
										""
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET EthernetInterfaces/1/",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "BaseNetworkAdapters List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/BaseNetworkAdapters/?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"BaseNetworkAdapters",
										""
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaseNetworkAdapters/1/",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/BaseNetworkAdapters/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"BaseNetworkAdapters",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "SmartStorage List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/SmartStorage/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"SmartStorage",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET SmartStorage/ArrayControllers/1/",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/SmartStorage/ArrayControllers/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"SmartStorage",
										"ArrayControllers",
										"1",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BIOS Settings",
					"item": [
						{
							"name": "Thermal",
							"item": [
								{
									"name": "Set the Server to remain Power OFF after thermal shutdown",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n\r\n    \"Oem\":{ \r\n\r\n        \"Hpe\":{ \r\n\r\n           \" CriticalTempRemainOff\":true \r\n\r\n        } \r\n\r\n    } \r\n\r\n} "
										},
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set the thermal settings",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n    \"Oem\":{ \r\n        \"Hpe\":{ \r\n           \"ThermalConfiguration\":\"OptimalCooling\" \r\n        } \r\n    } \r\n} "
										},
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/thermal",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"thermal"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Bios Settings - Current Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/Bios/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"Bios",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Get Bios Settings - Pending Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/Bios/settings",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"Bios",
										"settings"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "UEFI Boot Order/Current Settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/BIOS/Boot/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"BIOS",
										"Boot",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Boot Order Override to USB",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Boot\":{\r\n \r\n        \"BootSourceOverrideTarget\":\"Usb\"\r\n \r\n    }\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Boot Order Once to USB",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Boot\":{\r\n        \"BootSourceOverrideEnabled\":\"Once\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "UEFI Boot Order/Pending Settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/BIOS/Boot/Settings/?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"BIOS",
										"Boot",
										"Settings",
										""
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Boot Options",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/BootOptions/?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"BootOptions",
										""
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Certificates",
					"item": [
						{
							"name": "GET CA-signed certificate Actions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService/HttpsCert/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService",
										"HttpsCert",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET CSR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService/HttpsCert/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService",
										"HttpsCert",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Generate CSR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"City\":  \"Houston\",\r\n    \"CommonName\":  \"ilo-ABCD.lj.lab\",\r\n    \"OrgName\":  \"HPE\",\r\n    \"State\":  \"Texas\",\r\n    \"OrgUnit\":  \"Synergy\",\r\n    \"Country\":  \"US\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService/HttpsCert/Actions/HpeHttpsCert.GenerateCSR",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService",
										"HttpsCert",
										"Actions",
										"HpeHttpsCert.GenerateCSR"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Import CA-signed certificate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"Certificate\": \"blablabla\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService/HttpsCert/Actions/HpeHttpsCert.ImportCertificate",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService",
										"HttpsCert",
										"Actions",
										"HpeHttpsCert.ImportCertificate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Drive",
					"item": [
						{
							"name": "LED Indicator",
							"item": [
								{
									"name": "GET Drive Details IndicatorLED Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage/<x> /Drives/<y>",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"Storage",
												"<x> ",
												"Drives",
												"<y>"
											]
										}
									},
									"response": []
								},
								{
									"name": "Turn ON IndicatorLED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " { \r\n\r\n    \"IndicatorLED\": \"Lit\" \r\n\r\n} "
										},
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage/<x> /Drives/<y>",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"Storage",
												"<x> ",
												"Drives",
												"<y>"
											]
										}
									},
									"response": []
								},
								{
									"name": "Turn OFF IndicatorLED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " { \r\n\r\n    \"IndicatorLED\": \"Off\" \r\n\r\n} "
										},
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage/<x> /Drives/<y>",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"Storage",
												"<x> ",
												"Drives",
												"<y>"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Drive Power",
							"item": [
								{
									"name": "GET Drive Details / Action / Drive Reset",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage/<x> /Drives/<y>",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"Storage",
												"<x> ",
												"Drives",
												"<y>"
											]
										}
									},
									"response": []
								},
								{
									"name": "Turn ON Bay Power",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " { \r\n\r\n    “ResetValue\": “ForceOn\" \r\n\r\n} "
										},
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage/<x> /Drives/<y>/Actions/Drive.Reset/ ",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"Storage",
												"<x> ",
												"Drives",
												"<y>",
												"Actions",
												"Drive.Reset",
												" "
											]
										}
									},
									"response": []
								},
								{
									"name": "Turn OFF Bay Power",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "OData-Version",
												"value": "4.0",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Auth-Token",
												"value": "{{Token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " { \r\n\r\n    “ResetValue\": “ForceOff\" \r\n\r\n} "
										},
										"url": {
											"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage/<x> /Drives/<y>/Actions/Drive.Reset/ ",
											"host": [
												"{{iloURI}}"
											],
											"path": [
												"redfish",
												"v1",
												"Systems",
												"1",
												"Storage",
												"<x> ",
												"Drives",
												"<y>",
												"Actions",
												"Drive.Reset",
												" "
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "FW Inventory",
					"item": [
						{
							"name": "GET Firmware inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/FirmwareInventory/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"FirmwareInventory",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "IP address",
					"item": [
						{
							"name": "GET iLO NIC IP Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"//Get IP Address\r",
											"var IPv4Address =  jsonData.IPv4Addresses[0].Address;\r",
											"\r",
											"//Display in test results\r",
											"tests[\"iLO IPv4 address = \" + IPv4Address ] = true; \r",
											"\r",
											"//Get IP Address Origin\r",
											"var IPv4AddressOrigin =  jsonData.IPv4Addresses[0].AddressOrigin;\r",
											"\r",
											"//Display in test results\r",
											"tests[\"iLO IPv4 address mode = \" + IPv4AddressOrigin ] = true; "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								},
								"description": "Trying to patch iLO NIC to DHCP. To come back:\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
							},
							"response": []
						},
						{
							"name": "PATCH iLO NIC to DHCP",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"IPv4Addresses\": [\n        {\n            \"AddressOrigin\": \"DHCP\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								},
								"description": "Trying to patch iLO NIC to DHCP. \nTo come back:\n\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
							},
							"response": []
						},
						{
							"name": "PATCH iLO NIC to IP Static",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " { \n     \"IPv4Addresses\": \n    [ \n        { \n        \"Address\": \"192.168.0.8\", \n        \"AddressOrigin\": \"Static\", \n        \"Gateway\": \"192.168.1.1\", \n        \"SubnetMask\": \"255.255.252.0\" \n        } \n    ] \n}\n\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/EthernetInterfaces/1/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"EthernetInterfaces",
										"1",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Logs",
					"item": [
						{
							"name": "iLO Event Log",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/LogServices/IEL/Entries/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"LogServices",
										"IEL",
										"Entries",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Integrated Management Log Entries",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/LogServices/IML/Entries/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"LogServices",
										"IML",
										"Entries",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "iLO Security log",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/LogServices/SL/Entries/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"LogServices",
										"SL",
										"Entries",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Network Adapters",
					"item": [
						{
							"name": "GET Network Adapters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Chassis/1/NetworkAdapters",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Chassis",
										"1",
										"NetworkAdapters"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Offline FW Upgrade using SPP ISO",
					"item": [
						{
							"name": "Create Session with iLO Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"Token\", postman.getResponseHeader(\"X-Auth-Token\"));",
											"pm.environment.set(\"SessionLocation\", postman.getResponseHeader(\"Location\"));",
											"",
											"// To see the console, go to View / Show Postman Console",
											"console.log(\"Token:\", pm.variables.get(\"Token\")); ",
											"console.log(\"SessionLocation:\", pm.variables.get(\"SessionLocation\")); ",
											"",
											"//Display in session creation results",
											"tests[\"iLO session token = \" + pm.environment.get(\"Token\") ] = true; "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"UserName\": \"{{iloUser}}\",\n\"Password\": \"{{iloPasswd}}\"}\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Force Compute Power Off",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ResetType\": \"ForceOff\"}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/Actions/ComputerSystem.Reset",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"Actions",
										"ComputerSystem.Reset"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Mount SPP ISO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var date_header = postman.getResponseHeader(\"Date\");\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var message = jsonData.error['@Message.ExtendedInfo']\r",
											"\r",
											"postman.setEnvironmentVariable(\"SPP_mount_date\", date_header.slice(5, -4) );\r",
											"\r",
											"tests[\"Date = \" + pm.variables.get(\"SPP_mount_date\")] = true;\r",
											"tests[\"Result = \" + message[0].MessageId] = true;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Image\": \"https://liogw.lj.lab/repository/Synergy_Custom_SPP_2021.02.01_Z7550-97110.iso\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/2/Actions/VirtualMedia.InsertMedia/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										"2",
										"Actions",
										"VirtualMedia.InsertMedia",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "iLO Event Result task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var event_logs = jsonData.Members;\r",
											"\r",
											"for (var i = 0, len = event_logs.length; i < len; i++) {\r",
											"\r",
											"    //tests[\"Logs = \" + event_logs[i].Message] = true;\r",
											"\r",
											"    var event = event_logs[i]\r",
											"\r",
											"    var eventdate = event.Created\r",
											"    var evendatestdformat = (new Date(eventdate)).addHours(-2)\r",
											"        \r",
											"    //tests[\"Event date: \" + eventdate ] = true;\r",
											"    //tests[\"Formatted Event date: \" + evendatestdformat ] = true;\r",
											"\r",
											"    var mountdate = pm.variables.get(\"SPP_mount_date\")\r",
											"    var mountdatestdformat = new Date(mountdate)\r",
											"\r",
											"    //tests[\"Mount date: \" + mountdatestdformat] = true;\r",
											"    \r",
											"    if (event.Message.match(/Scriptable virtual media/) && (evendatestdformat >= mountdatestdformat) ) {\r",
											"        tests[\"Logs = \" + event.Message + \" - Date : \" + evendatestdformat + \" - Severity : \" + event.Severity] = true;\r",
											"        // tests[\"Event date: \" + eventdate ] = true;\r",
											"        // tests[\"Formatted Event date: \" + evendatestdformat ] = true;\r",
											"    }\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/LogServices/IEL/Entries",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"LogServices",
										"IEL",
										"Entries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Boot Order Override to USB",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Boot\":{\r\n \r\n        \"BootSourceOverrideTarget\":\"Usb\"\r\n \r\n    }\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Boot Order Once",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Boot\":{\r\n        \"BootSourceOverrideEnabled\":\"Once\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Compute Power On with boot from ISO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ResetType\": \"PushPowerButton\"}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/Actions/ComputerSystem.Reset",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"Actions",
										"ComputerSystem.Reset"
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "iLO Event Log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var event_logs = jsonData.Members.reverse();\r",
											"\r",
											"for (var i = 0, len = event_logs.length; i < len; i++) {\r",
											"\r",
											"    //tests[\"Logs = \" + event_logs[i].Message] = true;\r",
											"\r",
											"    var event = event_logs[i]\r",
											"\r",
											"    var eventdate = event.Created\r",
											"    var evendatestdformat = (new Date(eventdate)).addHours(-2)\r",
											"        \r",
											"    //tests[\"Event date: \" + eventdate ] = true;\r",
											"    //tests[\"Formatted Event date: \" + evendatestdformat ] = true;\r",
											"\r",
											"    var mountdate = pm.variables.get(\"SPP_mount_date\")\r",
											"    var mountdatestdformat = new Date(mountdate)\r",
											"\r",
											"    //tests[\"Mount date: \" + mountdatestdformat] = true;\r",
											"    \r",
											"    if (event.Message.match( /(Firmware|update|upgrade)/ ) && (evendatestdformat >= mountdatestdformat) ) {\r",
											"        tests[\"Logs = \" + event.Message + \" - Severity : \" + event.Oem.Hpe.Severity] = true;\r",
											"        // tests[\"Event date: \" + eventdate ] = true;\r",
											"        // tests[\"Formatted Event date: \" + evendatestdformat ] = true;\r",
											"    }\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/LogServices/IEL/Entries",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"LogServices",
										"IEL",
										"Entries"
									]
								}
							},
							"response": []
						},
						{
							"name": "iLO Integrated Management Log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var IML_logs = jsonData.Members.reverse();\r",
											"\r",
											"for (var i = 0, len = IML_logs.length; i < len; i++) {\r",
											"\r",
											"    //tests[\"Logs = \" + event_logs[i].Message] = true;\r",
											"\r",
											"    var event = IML_logs[i]\r",
											"\r",
											"    var eventdate = event.Created\r",
											"    var evendatestdformat = (new Date(eventdate)).addHours(-2)\r",
											"        \r",
											"    //tests[\"Event date: \" + eventdate ] = true;\r",
											"    //tests[\"Formatted Event date: \" + evendatestdformat ] = true;\r",
											"\r",
											"    var mountdate = pm.variables.get(\"SPP_mount_date\")\r",
											"    var mountdatestdformat = new Date(mountdate)\r",
											"\r",
											"    //tests[\"Mount date: \" + mountdatestdformat] = true;\r",
											"    \r",
											"    if (event.Message.match( /(Firmware|update|upgrade)/ ) && (evendatestdformat >= mountdatestdformat) ) {\r",
											"        tests[\"Logs = \" + event.Message + \" - Severity : \" + event.Oem.Hpe.Severity] = true;\r",
											"        // tests[\"Event date: \" + eventdate ] = true;\r",
											"        // tests[\"Formatted Event date: \" + evendatestdformat ] = true;\r",
											"    }\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/LogServices/IML/Entries/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"LogServices",
										"IML",
										"Entries",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Find if SPP ISO ejected",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"//Get CD Mount\r",
											"var Mounted =  jsonData.Inserted;\r",
											"\r",
											"//Display in test results\r",
											"tests[\"iLO Virtual Media Mounted  = \" + Mounted ] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/2/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										"2",
										""
									]
								},
								"description": "Ejecting the SPP ISO from iLO Virtual Media is not needed as when exiting SUM ejects it automatically"
							},
							"response": []
						}
					]
				},
				{
					"name": "Power Control",
					"item": [
						{
							"name": "Perform a graceful shutdown followed by a restart of the system",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"ResetType\":\"GracefulRestart\" \r\n} "
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/Actions/ComputerSystem.Reset",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"Actions",
										"ComputerSystem.Reset"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Security",
					"item": [
						{
							"name": "GET SecurityService",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/SecurityService",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"SecurityService"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Service Events",
					"item": [
						{
							"name": "Gen9: Event Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"Destination\": \"https://{{EventListener}}/RedfishEvents/EventReceiver.php\",\r\n\"EventTypes\": [\r\n    \"StatusChange\",\r\n     \"ResourceUpdated\",\r\n     \"ResourceAdded\",\r\n      \"ResourceRemoved\",\r\n      \"Alert\"\r\n],\r\n\"HttpHeaders\": {\r\n    \"Content-Type\": \"Application/JSON\",\r\n    \"OData-Version\": \"4.0\"\r\n},\r\n\"TTLCount\": 14400,\r\n\"TTLUnits\": \"minutes\",\r\n\"Context\": \"context string\",\r\n\"Oem\": {\r\n    \"Hp\": {\r\n        \"DeliveryRetryIntervalInSeconds\": 30,\r\n        \"RequestedMaxEventsToQueue\": 20,\r\n        \"DeliveryRetryAttempts\": 5,\r\n        \"RetireOldEventInMinutes\": 10\r\n    }\r\n}}\r\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/EventService/EventSubscriptions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"EventService",
										"EventSubscriptions",
										""
									]
								},
								"description": "Event Subscription on a Gen9 server"
							},
							"response": []
						},
						{
							"name": "Gen10: Event Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"Destination\": \"https://{{EventListener}}/RedfishEvents/EventReceiver.php\",\r\n\"EventTypes\": [\r\n    \"StatusChange\",\r\n     \"ResourceUpdated\",\r\n     \"ResourceAdded\",\r\n      \"ResourceRemoved\",\r\n      \"Alert\"\r\n],\r\n\"HttpHeaders\": {\r\n    \"Content-Type\": \"Application/JSON\",\r\n    \"OData-Version\": \"4.0\"\r\n},\r\n\"Context\": \"context string\",\r\n\"Oem\": {\r\n    \"Hpe\": {\r\n        \"DeliveryRetryIntervalInSeconds\": 30,\r\n        \"RequestedMaxEventsToQueue\": 20,\r\n        \"DeliveryRetryAttempts\": 5,\r\n        \"RetireOldEventInMinutes\": 10\r\n    }\r\n}}\r\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/EventService/EventSubscriptions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"EventService",
										"EventSubscriptions",
										""
									]
								},
								"description": "Event Subscription on a Gen10 server:\n\nDifference with Gen9:\nRemoved TTLCount and TTLUnit\n\nReplaced Oem/hp with Oem/hpe"
							},
							"response": []
						}
					]
				},
				{
					"name": "Sessions",
					"item": [
						{
							"name": "Get RedFish Sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set(\"SessionLocation\", jsonData.Members[0]['@odata.id']);\r",
											"        \r",
											"tests[\"SessionLocation = \" + pm.environment.get(\"SessionLocation\")] = true;  \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Delete Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}{{SessionLocation}}",
									"host": [
										"{{iloURI}}{{SessionLocation}}"
									]
								},
								"description": "DELETE Session"
							},
							"response": []
						},
						{
							"name": "Get Sessions w/ BasicAuthentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{iloPasswd}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{iloUser}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Sessions using Basic Authentication"
							},
							"response": []
						}
					]
				},
				{
					"name": "Smart Storage / Logical Drives",
					"item": [
						{
							"name": "Systems/1/SmartStorageConfig/settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/SmartStorageConfig/settings/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"SmartStorageConfig",
										"settings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Logical drives",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/systems/1/smartstorageconfig/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"systems",
										"1",
										"smartstorageconfig",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Logical drives Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/systems/1/smartstorageconfig/settings/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"systems",
										"1",
										"smartstorageconfig",
										"settings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Delete all Logical drives and clear controller config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\r\n\t\"Actions\": [\r\n\t\t{\r\n\t\t\t\"Action\": \"ClearConfigurationMetadata\"\r\n\t\t\t\r\n\t\t}\r\n\t\t],\r\n\t\t\r\n   \"LogicalDrives\": [],\r\n   \"DataGuard\": \"Disabled\"\r\n    \r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/systems/1/smartstorageconfig/settings/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"systems",
										"1",
										"smartstorageconfig",
										"settings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Create Logical drives",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"LogicalDrives\": [\r\n       {\r\n          \"Raid\": \"Raid1\",\r\n          \"LogicalDriveName\": \"LD_RAID1-2DISKS\",\r\n          \"DataDrives\": [\r\n                \"3I:1:1\",\r\n                \"3I:1:2\"\r\n          ]\r\n\r\n           \r\n       }\r\n    ],\r\n    \"DataGuard\": \"Disabled\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/systems/1/smartstorageconfig/settings/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"systems",
										"1",
										"smartstorageconfig",
										"settings",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Storage",
					"item": [
						{
							"name": "GET Storage Devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Systems/1/Storage",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Systems",
										"1",
										"Storage"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Telemetry",
					"item": [
						{
							"name": "Create Session with iLO Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"Token\", postman.getResponseHeader(\"X-Auth-Token\"));",
											"pm.environment.set(\"SessionLocation\", postman.getResponseHeader(\"Location\"));",
											"",
											"",
											"console.log(\"Token:\", pm.variables.get(\"Token\")); ",
											"console.log(\"SessionLocation:\", pm.variables.get(\"SessionLocation\")); ",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"UserName\": \"{{iloUser}}\",\n\"Password\": \"{{iloPasswd}}\"}\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Get RedFish Sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Get RedFish Telemetry",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/telemetryservice/metricreports",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"telemetryservice",
										"metricreports"
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "Get RedFish Telemetry + Expand Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/telemetryservice/metricreports?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"telemetryservice",
										"metricreports"
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "Get RedFish Telemetry Definitions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/telemetryservice/metricreportdefinitions",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"telemetryservice",
										"metricreportdefinitions"
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "Get average CPU0 frequency for 10mn/sensing interval 20s",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/TelemetryService/MetricReports/AvgCPU0FreqCustom1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"TelemetryService",
										"MetricReports",
										"AvgCPU0FreqCustom1"
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "Get average CPU1 frequency for 10mn/sensing interval 20s",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/TelemetryService/MetricReports/AvgCPU1FreqCustom1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"TelemetryService",
										"MetricReports",
										"AvgCPU1FreqCustom1"
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "Get Memory Bus Utilization for 10mn/sensing interval 20s",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/TelemetryService/MetricReports/MemoryBusUtilCustom1",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"TelemetryService",
										"MetricReports",
										"MemoryBusUtilCustom1"
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						},
						{
							"name": "Get Power Meters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Chassis/1/Power/PowerMeter/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Chassis",
										"1",
										"Power",
										"PowerMeter",
										""
									]
								},
								"description": "Get the list of all the Redfish services, at root level"
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Service",
					"item": [
						{
							"name": "Create Session with iLO Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"Token\", postman.getResponseHeader(\"X-Auth-Token\"));",
											"pm.environment.set(\"SessionLocation\", postman.getResponseHeader(\"Location\"));",
											"",
											"// To see the console, go to View / Show Postman Console",
											"console.log(\"Token:\", pm.variables.get(\"Token\")); ",
											"console.log(\"SessionLocation:\", pm.variables.get(\"SessionLocation\")); ",
											"",
											"//Display in session creation results",
											"tests[\"iLO session token = \" + pm.environment.get(\"Token\") ] = true; "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"UserName\": \"{{iloUser}}\",\n\"Password\": \"{{iloPasswd}}\"}\n"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"SessionService",
										"Sessions",
										""
									]
								},
								"description": "Get Session Token"
							},
							"response": []
						},
						{
							"name": "Get Update Service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService"
									]
								},
								"description": "See **FlashProgressPercent** and **State** in **Oem.hpe**\r\n  \r\nWith iLO 5 firmware 2.30 and higher versions, a successful **SimpleUpdate** returns two pointers in the Task Service: \r\n1. a task location \r\n2. a task monitor location. \r\n\r\nThe task location (**/redfish/v1/TaskService/Tasks/xx**) contains the details of the update and the task monitor location (**/redfish/v1/TaskService/TaskMonitors/xx**) contains the status of the task at the time of the query."
							},
							"response": []
						},
						{
							"name": "SoftwareInventory Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/SoftwareInventory",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"SoftwareInventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "SoftwareInventory Collection + Expand Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/SoftwareInventory?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"SoftwareInventory"
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FirmwareInventory Collection + Expand Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/FirmwareInventory?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"FirmwareInventory"
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST SimpleUpdate for iLO FW Upgrade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"ImageURI\": \"https://192.168.1.2/ilo5_230.bin\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/Actions/UpdateService.SimpleUpdate",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"Actions",
										"UpdateService.SimpleUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Update Task Queues",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var taskqueues = jsonData.Members;\r",
											"\r",
											"tests[\"Number of task: \" + taskqueues.length ] = true;\r",
											"\r",
											"for (var i = 0, len = taskqueues.length; i < len; i++) {\r",
											"\r",
											"    var odata_id = taskqueues[i]['@odata.id']\r",
											"    var taskid = odata_id.split(\"/\")[5]\r",
											"    tests[\"Task-\" + (i+1) + \" : \" + odata_id ] = true;\r",
											"    tests[\"Task-\" + (i+1) + \" ID : \" + taskid ] = true;\r",
											"\r",
											"   //Set environment variable\r",
											"   postman.setEnvironmentVariable(\"taskid\" + (i+1),taskid)\r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue"
									]
								},
								"description": "See **FlashProgressPercent** and **State** in **Oem.hpe**\r\n  \r\nWith iLO 5 firmware 2.30 and higher versions, a successful **SimpleUpdate** returns two pointers in the Task Service: \r\n1. a task location \r\n2. a task monitor location. \r\n\r\nThe task location (**/redfish/v1/TaskService/Tasks/xx**) contains the details of the update and the task monitor location (**/redfish/v1/TaskService/TaskMonitors/xx**) contains the status of the task at the time of the query."
							},
							"response": []
						},
						{
							"name": "Get Update Task Queue 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue/{{taskid1}}",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue",
										"{{taskid1}}"
									]
								},
								"description": "See **FlashProgressPercent** and **State** in **Oem.hpe**\r\n  \r\nWith iLO 5 firmware 2.30 and higher versions, a successful **SimpleUpdate** returns two pointers in the Task Service: \r\n1. a task location \r\n2. a task monitor location. \r\n\r\nThe task location (**/redfish/v1/TaskService/Tasks/xx**) contains the details of the update and the task monitor location (**/redfish/v1/TaskService/TaskMonitors/xx**) contains the status of the task at the time of the query."
							},
							"response": []
						},
						{
							"name": "Get Update Task Queue 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue/{{taskid2}}",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue",
										"{{taskid2}}"
									]
								},
								"description": "See **FlashProgressPercent** and **State** in **Oem.hpe**\r\n  \r\nWith iLO 5 firmware 2.30 and higher versions, a successful **SimpleUpdate** returns two pointers in the Task Service: \r\n1. a task location \r\n2. a task monitor location. \r\n\r\nThe task location (**/redfish/v1/TaskService/Tasks/xx**) contains the details of the update and the task monitor location (**/redfish/v1/TaskService/TaskMonitors/xx**) contains the status of the task at the time of the query."
							},
							"response": []
						},
						{
							"name": "POST Actions - Upload Component to iLO Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"ImageURI\": \"https://192.168.1.2/firmwares/cp040152.exe\",\r\n\"CompSigURI\": \"https://192.168.1.2/firmwares/cp040152.compsig\",\r\n\"UpdateRepository\": true,\r\n\"UpdateTarget\": false\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/Actions/Oem/Hpe/HpeiLOUpdateServiceExt.AddFromUri/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"Actions",
										"Oem",
										"Hpe",
										"HpeiLOUpdateServiceExt.AddFromUri",
										""
									]
								},
								"description": "Components larger than 32 MiB (33554432 bytes) cannot be sent as such and must be split into 32 MiB chunks before being uploaded."
							},
							"response": []
						},
						{
							"name": "Add Component to Installation Queue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"Name\": \"Friendly name for this item in the installation queue\",\r\n\"Filename\": \"htcp040154.exe\",\r\n\"Command\": \"ApplyUpdate\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue"
									]
								},
								"description": "List of possible *command* values:\r\n- ApplyUpdate\r\n- ResetServer\r\n- ResetBmc\r\n- Wait"
							},
							"response": []
						},
						{
							"name": "Add FW Component to Installation Queue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//Get task ID\r",
											"taskid=  jsonData.id;\r",
											"//Set environment variable\r",
											"postman.setEnvironmentVariable(\"taskid\",taskid);\r",
											"tests[taskid+ \"= \" +taskid] = true; \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"Name\": \"Binary to be flashed immediately by iLO\",\r\n\"Filename\": \"ilo5_230.bin\",\r\n\"Command\": \"ApplyUpdate\",\r\n\"UpdatableBy\": [\r\n    \"Bmc\"\r\n   ]\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue"
									]
								},
								"description": "List of possible *command* values:\r\n- ApplyUpdate\r\n- ResetServer\r\n- ResetBmc\r\n- Wait"
							},
							"response": []
						},
						{
							"name": "Remove a component in the Installation Queue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue/{{taskid}}",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue",
										"{{taskid}}"
									]
								},
								"description": "To delete a single component from the Installation Queue, you just have to send a DELETE request toward the component URI in the Installation Queue."
							},
							"response": []
						},
						{
							"name": "Remove all components in the Installation Task Queue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/Actions/Oem/Hpe/HpeiLOUpdateServiceExt.DeleteUpdateTaskQueueItems",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"Actions",
										"Oem",
										"Hpe",
										"HpeiLOUpdateServiceExt.DeleteUpdateTaskQueueItems"
									]
								},
								"description": "You can remove all items in the Installation Queue with a single POST query toward the DeleteUpdateTaskQueueItems target in the Oem.Hpe Actions of the Update Service."
							},
							"response": []
						},
						{
							"name": "Creation of a maintenance window",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"Description\": \"Christmas 2020 Maintenance window\",\r\n\"Name\": \"Christmas Maintenance Window\",\r\n\"StartAfter\": \"2020-12-25T00:00:00Z\",\r\n\"Expire\": \"2020-12-25T22:00:00Z\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/MaintenanceWindows",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"MaintenanceWindows"
									]
								},
								"description": "**StartAfter** and **Expire** properties have to follow the ISO 8601 Redfish-extended format detailed in the DMTF specifications.\r\n\r\nThe response of a successful creation of a maintenance window contains various information including its **URI** and **Id**."
							},
							"response": []
						},
						{
							"name": "Update task scheduled during a specific maintenance window",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"Name\": \"FW for iLO5\",\r\n\"MaintenanceWindow\": \"7ada2ed8\",\r\n\"Filename\": \"cp040154.exe\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/UpdateTaskQueue",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"UpdateTaskQueue"
									]
								},
								"description": "The response returns the URI of the task with a Pending state as well as other useful information."
							},
							"response": []
						},
						{
							"name": "Deletion of a specific maintenance window",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/MaintenanceWindows/7ada2ed8",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"MaintenanceWindows",
										"7ada2ed8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deletion of all maintenance windows",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/Actions/Oem/Hpe/HpeiLOUpdateServiceExt.DeleteMaintenanceWindows",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"Actions",
										"Oem",
										"Hpe",
										"HpeiLOUpdateServiceExt.DeleteMaintenanceWindows"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Install Sets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var installsets = jsonData.Members;\r",
											"\r",
											"tests[\"Number of task: \" + installsets.length ] = true;\r",
											"\r",
											"for (var i = 0, len = installsets.length; i < len; i++) {\r",
											"\r",
											"    var odata_id = installsets[i]['@odata.id']\r",
											"    var installsetid = odata_id.split(\"/\")[5]\r",
											"    \r",
											"    tests[\"installset-\" + (i+1) + \" : \" + odata_id ] = true;\r",
											"    tests[\"installset-\" + (i+1) + \" ID : \" + installsetid ] = true;\r",
											"    \r",
											"   //Set environment variable\r",
											"   postman.setEnvironmentVariable(\"installsetid\" + (i+1),installsetid)\r",
											"\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/InstallSets",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"InstallSets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Install Set 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/InstallSets/{{installsetid1}}",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"InstallSets",
										"{{installsetid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Install Set 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/InstallSets/{{installsetid2}}",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"InstallSets",
										"{{installsetid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Install Set",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"Name\": \"MyInstallSet\",\r\n\"Description\": \"Description of the Install Set\",\r\n\"IsRecovery\": false,\r\n\"Sequence\": [\r\n    {\r\n        \"Name\": \"iLO5 FW 2/30\",\r\n        \"Filename\": \"ilo5_230.bin\",\r\n        \"Command\": \"ApplyUpdate\",\r\n        \"UpdatableBy\": [\"Bmc\"]\r\n    }\r\n]\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/InstallSets",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"InstallSets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Install Set",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"Name\": \"MyModifiedInstallSet\",\r\n\"Sequence\": [\r\n     {\r\n        \"Name\": \"ROM 2.36\",\r\n        \"Filename\": \"U32_2.36_07_16_2020.signed.flash\",\r\n        \"Command\": \"ApplyUpdate\",\r\n        \"UpdatableBy\": [\"Uefi\"]\r\n    },\r\n    {\r\n        \"Name\": \"iLO5 FW 2/30\",\r\n        \"Filename\": \"ilo5_230.bin\",\r\n        \"Command\": \"ApplyUpdate\",\r\n        \"UpdatableBy\": [\"Bmc\"]\r\n    }\r\n]\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/InstallSets/a4f0d824",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"InstallSets",
										"a4f0d824"
									]
								},
								"description": "Note that, after its modification, the **Id** (and thus the **URI**) of the modified install set has changed. \r\nThe new **Id** and **URI** are mentioned in the response body of the **PATCH** request"
							},
							"response": []
						},
						{
							"name": "Add all the components of an install set in a cleared Installation Queue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"MaintenanceWindow\": \"7ada2ed8\",\r\n\"ClearTaskQueue\": true,\r\n\"UpdateRecoveryState\": false\r\n\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/UpdateService/InstallSets/{{installset1}}/Actions/HpeComponentInstallSet.Invoke",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"UpdateService",
										"InstallSets",
										"{{installset1}}",
										"Actions",
										"HpeComponentInstallSet.Invoke"
									]
								},
								"description": "The Installation Queue will be cleared before the addition of this install set (ClearTaskQueue). \r\nThe effective update will occur during the specified maintenance window."
							},
							"response": []
						},
						{
							"name": "Get TaskService",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"url": {
									"raw": "{{iloURI}}/redfish/v1/TaskService/Tasks?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"TaskService",
										"Tasks"
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Virtual Medias",
					"item": [
						{
							"name": "Get Mount Medias",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/?$expand=.",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										""
									],
									"query": [
										{
											"key": "$expand",
											"value": "."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Mount CentOS Livecd ISO_Boot",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Image\": \"https://liogw.lj.lab/deployment/Custom-CentOS-7.iso\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/2/Actions/VirtualMedia.InsertMedia/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										"2",
										"Actions",
										"VirtualMedia.InsertMedia",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Mount SPP ISO_RemovableMedia",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Image\": \"https://liogw.lj.lab/deployment/HPE_Synergy_Custom_SPP_2020.07.01_Z7550-96923.iso\"\r\n}"
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/1/Actions/VirtualMedia.InsertMedia/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										"1",
										"Actions",
										"VirtualMedia.InsertMedia",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Un-Mount SPP ISO_1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/1/Actions/VirtualMedia.EjectMedia/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										"1",
										"Actions",
										"VirtualMedia.EjectMedia",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Un-Mount SPP ISO_2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{Token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{iloURI}}/redfish/v1/Managers/1/VirtualMedia/2/Actions/VirtualMedia.EjectMedia/",
									"host": [
										"{{iloURI}}"
									],
									"path": [
										"redfish",
										"v1",
										"Managers",
										"1",
										"VirtualMedia",
										"2",
										"Actions",
										"VirtualMedia.EjectMedia",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Session with iLO Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"Token\", postman.getResponseHeader(\"X-Auth-Token\"));",
									"pm.environment.set(\"SessionLocation\", postman.getResponseHeader(\"Location\"));",
									"",
									"// To see the console, go to View / Show Postman Console",
									"console.log(\"Token:\", pm.variables.get(\"Token\")); ",
									"console.log(\"SessionLocation:\", pm.variables.get(\"SessionLocation\")); ",
									"",
									"//Display in session creation results",
									"tests[\"iLO session token = \" + pm.environment.get(\"Token\") ] = true; "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"UserName\": \"{{iloUser}}\",\n\"Password\": \"{{iloPasswd}}\"}\n"
						},
						"url": {
							"raw": "{{iloURI}}/redfish/v1/SessionService/Sessions/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"SessionService",
								"Sessions",
								""
							]
						},
						"description": "Get Session Token"
					},
					"response": []
				},
				{
					"name": "Get RedFish ServiceRoot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								""
							]
						},
						"description": "Get the list of all the Redfish services, at root level"
					},
					"response": []
				},
				{
					"name": "Get Remote Support Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Managers/1/remotesupportservice?$expand=.",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Managers",
								"1",
								"remotesupportservice"
							],
							"query": [
								{
									"key": "$expand",
									"value": "."
								}
							]
						},
						"description": "Get the list of all the Redfish services, at root level"
					},
					"response": []
				},
				{
					"name": "Get System /v1/system/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Systems/1/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Systems",
								"1",
								""
							]
						},
						"description": "Get Session Token"
					},
					"response": []
				},
				{
					"name": "Get iLO - /v1/managers/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"//Get IP Address\r",
									"var IPv4Address =  jsonData.IPv4Addresses[0].Address;\r",
									"\r",
									"//Display in test results\r",
									"tests[\"iLO IPv4 address = \" + IPv4Address ] = true; \r",
									"\r",
									"//Get IP Address Origin\r",
									"var IPv4AddressOrigin =  jsonData.IPv4Addresses[0].AddressOrigin;\r",
									"\r",
									"//Display in test results\r",
									"tests[\"iLO IPv4 address mode = \" + IPv4AddressOrigin ] = true; "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Managers/1/",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Managers",
								"1",
								""
							]
						},
						"description": "Trying to patch iLO NIC to DHCP. To come back:\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
					},
					"response": []
				},
				{
					"name": "POST iLO Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Managers/1/Actions/Manager.Reset",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Managers",
								"1",
								"Actions",
								"Manager.Reset"
							]
						},
						"description": "Trying to patch iLO NIC to DHCP. To come back:\n{\n\"IPv4Addresses\": [\n        {\n            \"Address\": \"172.16.50.99\",\n            \"AddressOrigin\": \"Static\",\n            \"Gateway\": \"172.16.50.254\",\n            \"SubnetMask\": \"255.255.255.0\"\n        }\n    ]\n}"
					},
					"response": []
				},
				{
					"name": "GET Memory DIMMs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Systems/1/Memory/?$expand=.",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Systems",
								"1",
								"Memory",
								""
							],
							"query": [
								{
									"key": "$expand",
									"value": "."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PCI devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{Token}}"
							}
						],
						"url": {
							"raw": "{{iloURI}}/redfish/v1/Systems/1/PCIDevices/?$expand=.",
							"host": [
								"{{iloURI}}"
							],
							"path": [
								"redfish",
								"v1",
								"Systems",
								"1",
								"PCIDevices",
								""
							],
							"query": [
								{
									"key": "$expand",
									"value": "."
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}