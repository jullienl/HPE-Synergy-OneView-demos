---
- name: Ansible OneView Synergy playbook to deploy Gen9/Gen10 Compute Module(s) using a Server Profile Template
  hosts: localhost
  collections:
    - hpe.oneview
  gather_facts: no

  vars:
    # Composer1
    - config: "{{ playbook_dir }}/composer1_config.json"
    # Composer2
    #- config: "{{ playbook_dir }}/oneview_config.json"
    - server_template: "RHEL BFS"

  tasks: 
    # IP address can be 192.168.3.171 to 3.179
    # Gen9: .172 - Gen10: .171
    - set_fact: 
        hostname="RHEL-1_Ansible_deployment"
        ipaddr=192.168.3.172
        image=https://liogw.lj.lab/deployment/rhel83-x64/RHEL-8.3-with-KS.iso 
        source=ks-rhel8.3.sh
        destination="/mnt/win_deployment/Media/rhel83-x64/RHEL83ks.cfg"

    - name: Creating Server Profile [{{ hostname }}] from Server Profile Template [{{ server_template }}]
      oneview_server_profile:
        config: "{{ config }}"
        data:
          serverProfileTemplateName: "{{ server_template }}"
          name: "{{ hostname }}"
        # serverHardwareUri: "/rest/server-hardware/39313738-3234-584D-5138-323830343848"
        # server_hardware: Encl1, bay 12
        # If any hardware was informed, it will try get one available automatically
      delegate_to: localhost
      register: result

    - name: Task result of the Server Profile(s) creation
      debug:
        msg: "{{ result.msg }}"

    - name: Capture server generation, MAC of FCoE primary boot port and LUN uri of the primary boot volume to customize kickstart for Gen9/Gen10
      set_fact:
        generation: "{{ server_hardware.generation }}"
        lunuri: "{{ (server_profile.sanStorage.volumeAttachments | selectattr('bootVolumePriority', 'equalto', 'Primary') | map(attribute='volumeUri') | list)[0] }}"
        mac: "{{ (server_profile.connectionSettings.connections | selectattr('boot.priority', 'equalto', 'Primary') | map(attribute='mac') | list)[0] }}"

    #- debug: var=server_profile
    #- debug: var=serial_number
    #- debug: var=server_hardware
    #- debug: var=compliance_preview
    #- debug: var=created

    #- debug: var=generation
    #- debug: var=lunuri
    #- debug: var=mac 

    - name: Collect volumes facts
      oneview_volume_facts:
        config: "{{ config }}"
      delegate_to: localhost

    #- debug: var=storage_volumes
      
    - name: Capture boot LUN size defined in Profile to ensure that RHEL will be installed on this disk through ks   
      set_fact:
        size: "{{ ((storage_volumes | selectattr('uri', 'equalto', lunuri) | map(attribute='provisionedCapacity') | list)[0] | int / (1024*1024*1024) ) |int}}"

    #- debug: var=size

    - name: create custom kickstart file on web server
      template:
        src: "{{source}}"
        dest: "{{destination}}"
      delegate_to: localhost

    - name: Task to boot system from ISO using iLO interface (+ power up the server)
      community.general.hpilo_boot:
        host: "{{ server_hardware.mpHostInfo.mpIpAddresses[1].address }}" 
        login: Administrator
        password: password
        media: cdrom
        image: "{{ image }}" 
      delegate_to: localhost

