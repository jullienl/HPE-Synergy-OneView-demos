---
# This playbook adds a network resource to a Synergy environment and presents this network to all Compute Modules using a Network Set.
#
#
# Requirement:
# - A network Set must be defined and presented to the Server Profiles
#
# This playbook performs the following steps:
# - Creates a new ethernet network using the variables defined in the vars section
# - Adds the new Ethernet network to the uplink set defined in the selected Logical Interconnect Group
# - Updates the logical interconnect from the new logical interconnect group definition
# - Adds the new ethernet network to the defined network set

- name: Add a network resource to a Synergy environment and present that network to all Compute Modules using a Network Set.
  hosts: localhost
  collections:
    - hpe.oneview
  vars:
    config: "{{ playbook_dir }}/oneview_config.json"

    # Network to add
    network_name: "Network-200"
    network_vlan_id: 200
    maximum_Bandwidth: 25000 # Maximum bandwidth: 25Gb/s
    preferred_Bandwidth: 2500 # Preferred bandwidth: 2.5Gb/s

    LIG: "LIG-MLAG"
    Uplinkset: "MLAG-Nexus"
    NetworkSet: "Production_network_set"
    logical_interconnect_name: "LE-LIG-MLAG"
    new_uplinkset_uris: []

  tasks:
    - name: Create Ethernet Network '{{ network_name }}'
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          name: "{{ network_name }}"
          vlanId: "{{ network_vlan_id }}"
          ethernetNetworkType: Tagged
          purpose: General
          smartLink: false
          privateNetwork: false
          bandwidth:
            maximumBandwidth: "{{ maximum_Bandwidth }}"
            typicalBandwidth: "{{ preferred_Bandwidth }}"

    # - debug: var=ethernet_network

    - name: Store network URI
      set_fact:
        network_uri: "{{ ethernet_network.uri  }}"

    # - debug: var=network_uri

    - name: Gather facts about the Uplink Set '{{ Uplinkset }}'
      oneview_uplink_set_facts:
        config: "{{ config }}"
        name: "{{ Uplinkset }}"

    # - debug: var=uplink_sets

    - name: Store uplink set URIs
      set_fact:
        uplinkset_uris: "{{ (uplink_sets | map(attribute='networkUris') | list)[0] }}"

    # - debug: var=uplinkset_uris

    - name: Set a new variable for the new uplink set uris
      set_fact:
        new_uplinkset_uris: "{{uplinkset_uris}}"

    - name: Append new network uri to new uplink set uris list
      set_fact:
        new_uplinkset_uris: "{{ new_uplinkset_uris + [ network_uri ] }}"

    # - debug: var=new_uplinkset_uris

    - name: Modify the Logical Interconnect Group '{{ LIG }}' with new uplinkSet URIs definition
      oneview_logical_interconnect_group:
        config: "{{ config }}"
        state: present
        data:
          name: "{{ LIG }}"
          uplinkSets:
            - name: "{{ Uplinkset }}"
              networkUris: "{{ new_uplinkset_uris }} "
              networkType: "Ethernet"
              ethernetNetworkType: "Tagged"
              mode: "Auto"

    - name: Gather facts about the Logical Interconnect '{{ logical_interconnect_name }}'
      oneview_logical_interconnect_facts:
        config: "{{ config }}"
        name: "{{ logical_interconnect_name }}"

    #- debug: msg="{{ logical_interconnects['consistencyStatus'] }}"
    - set_fact: li_consistencyStatus={{ logical_interconnects['consistencyStatus'] }}

    - name: Update the logical interconnect '{{ logical_interconnect_name }}' from logical interconnect group '{{ LIG }}'
      when: li_consistencyStatus != "CONSISTENT"
      oneview_logical_interconnect:
        config: "{{ config }}"
        state: compliant
        data:
          name: "{{ logical_interconnect_name }}"
      register: result

    - name: Result of the update from group task
      when: li_consistencyStatus != "CONSISTENT"
      debug: msg="{{ result.msg }}"

    - name: Gather facts about a Network Set by name
      oneview_network_set_facts:
        config: "{{ config }}"
        name: "{{ NetworkSet }}"
      delegate_to: localhost

    # - debug: var=network_sets

    - name: Store network set URIs
      set_fact:
        network_set_uris: "{{ (network_sets | map(attribute='networkUris') | list)[0] }}"

    # - debug: var=network_set_uris

    - name: Set a new variable for the new network set uris
      set_fact:
        new_network_set_uris: "{{network_set_uris}}"

    - name: Append new network uri to network set network uris list
      set_fact:
        new_network_set_uris: "{{ new_network_set_uris + [ network_uri ] }}"

    # - debug: var=new_network_set_uris

    - name: Adds the new network to the Network Set
      oneview_network_set:
        config: "{{ config }}"
        state: present
        data:
          name: "{{ NetworkSet }}"
          networkUris: "{{ new_network_set_uris }}"
          bandwidth:
            maximumBandwidth: "{{ maximum_Bandwidth }}"
            typicalBandwidth: "{{ preferred_Bandwidth }}"
      delegate_to: localhost
